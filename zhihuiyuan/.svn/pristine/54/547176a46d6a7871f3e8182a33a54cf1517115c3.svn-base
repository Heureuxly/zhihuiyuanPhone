<<<<<<< .mine
<?php
namespace Admin\Controller;
use Think\Controller;
header('Content-Type: text/html; charset=utf-8');
class TypeController extends Controller {
    public function index(){
     //两化融合分类使用函数，生成包含option的字符串，并传给模板
    $str=getTypen();
    $this->assign('typeStr',$str);

  //企业百科分类使用函数，生成包含option的字符串，并传给模板
    $str1=getTypen1();
    $this->assign('typeStr1',$str1);
       
        $this->display();
    }

    
  //修改分类
  function update(){
    if($_GET['xid'] == 1){
      $id = $_GET['id'];
      $arr = M("36serves")->where("id=$id")->find();
      $this->assign('arr',$arr);
    }elseif($_GET['xid'] == 2){
      $id = $_GET['id'];
      $arr = M("services")->where("id = $id")->find();
      $this->assign('arr',$arr);
    }
    
    $this->display();
  }
  //修改表单数据处理
  function usave(){
    if($_POST['36name'] !=''){
      $ob=M('36serves');
      $id=$_POST['id'];
      $re=$ob->where("id=$id")->data($_POST)->save();
      if($re){
        $this->success("修改成功",U("Admin/Type/oper/aid/1"),2);
      }else{
        $this->error("修改失败",U("Admin/Type/oper/aid/1"),3);
      }
    }elseif($_POST['sername'] !=''){
      $ob=M('services');
      $id=$_POST['id'];
      $re=$ob->where("id=$id")->data($_POST)->save();
      if($re){
        $this->success("修改成功",U("Admin/Type/oper/aid/2"),2);
      }else{
        $this->error("修改失败",U("Admin/Type/oper/aid/2"),3);
      }
    }
    
  }

  //添加两化融合分类,表单数据处理
  function save(){
    
   $path = M('36serves')->where('nid = '.$_POST['nid'])->find();
    $_POST['path'] = $path['path'];
    $ob=M('36serves');
    $re=$ob->data($_POST)->add();
    if($re){
      $this->success("添加成功",U("Type/index"),2);
    }else{
      $this->error("添加失败",U("Type/index"),3);
    }
  }


  //添加企业百科分类,表单数据处理
  function save2(){
    
   $path = M('services')->where('nid = '.$_POST['nid'])->find();
    $_POST['path'] = $path['path'];
    $ob=M('services');
    $re=$ob->data($_POST)->add();
    if($re){
      $this->success("添加成功",U("Type/index"),2);
    }else{
      $this->error("添加失败",U("Type/index"),3);
    }
  }


  //分类的列表
  function oper(){
      if($_GET['aid'] == 1){
        $str=getTypenTr();
        $this->assign('typeStr',$str);
      }elseif($_GET['aid'] == 2){
        $str=getTypenTr2();
        $this->assign('typeStr',$str);
      }
      $this->display();
    }

  //删除分类
    function del(){

      if($_GET['id'] !=''){
        //地址栏，上线以后改为域名
        echo '<script type="text/javascript">
         var re =window.confirm("是否删除此分类?");
         if(re == false){
           location.href="http://localhost/zhihuiyuan/Admin/Type/oper/aid/1";
         }
        </script>';
      }

      if($_GET['xid'] == 1){
        if($_GET['id'] !=''){
          $id = $_GET['id'];
          $re = M("36serves")->where("id = $id")->delete();
          if($re){
            $this->success('删除分类成功!');
          }else{
            $this->error('删除分类失败!');
          };
        };
      }elseif($_GET['xid'] == 2){
        if($_GET['id'] !=''){
          $id = $_GET['id'];
          $re = M("services")->where("id = $id")->delete();
          if($re){
            $this->success('删除分类成功!');
          }else{
            $this->error('删除分类失败!');
          };
        };
      }
  }

   /* //分类页默认显示 
    public function type(){
      //默认分类列表显示
      //二级分类
      $resuleTow = M('36serves')->where('nid = 0')->select();
      //三级分类
      $resuleSthree = M('36serves')->where('nid = 1')->select();
      //四级分类
      $resuleFour = M('36serves')->where('nid = 9')->select();


      $this->assign('resuleFour',$resuleFour);
      $this->assign('resuleSthree',$resuleSthree);
      $this->assign('resuleTow',$resuleTow);


      $this->display('News/index');

    }


    public function addtype(){
      //二级分类列表显示

      if($_POST['content1'] == 1){
        $resuleTow = M('36serves')->where('nid = 0')->select();
        foreach ($resuleTow as $k => $v) {
        echo '<option class="tow" value="'.$v['id'].'">'.$v['36name'].'</option>';
          
        };
        //echo json_encode($resuleTow);
      }elseif($_POST['content2']){
        echo $_POST['content2'];
      }


      if($_POST['content1'] == 2){
         $resuleTow = M('services')->where('nid = 0')->select();
         foreach ($resuleTow as $k => $v) {
          echo '<option class="tow" value="'.$v['id'].'">'.$v['sername'].'</option>' ;
        }
      }
      





    }
    
*/






}||||||| .r0
=======
<?php
namespace Admin\Controller;
use Think\Controller;
class TypeController extends Controller {
    public function index(){
     //两化融合分类使用函数，生成包含option的字符串，并传给模板
    $str=getTypen();
    $this->assign('typeStr',$str);
       
        $this->display();
    }

    /*//分类的列表
  function oper(){


    $str=getTypenTr();
    $this->assign('typeStr',$str);
    $this->display();
  }*/
  //修改分类
  function add(){
    //使用函数，生成包含option的字符串，并传给模板
    $str=getTypen();
    $this->assign('typeStr',$str);
    $this->display();
  }

  //添加两化融合分类,表单数据处理
  function save(){
    $ob=M('36serves');
    $re=$ob->data($_POST)->add();
    if($re){
      $this->success("添加成功",U("Type/add"),2);
    }else{
      $this->error("添加失败",U("Type/add"),3);
    }
  }


   /* //分类页默认显示 
    public function type(){
      //默认分类列表显示
      //二级分类
      $resuleTow = M('36serves')->where('nid = 0')->select();
      //三级分类
      $resuleSthree = M('36serves')->where('nid = 1')->select();
      //四级分类
      $resuleFour = M('36serves')->where('nid = 9')->select();


      $this->assign('resuleFour',$resuleFour);
      $this->assign('resuleSthree',$resuleSthree);
      $this->assign('resuleTow',$resuleTow);


      $this->display('News/index');

    }


    public function addtype(){
      //二级分类列表显示

      if($_POST['content1'] == 1){
        $resuleTow = M('36serves')->where('nid = 0')->select();
        foreach ($resuleTow as $k => $v) {
        echo '<option class="tow" value="'.$v['id'].'">'.$v['36name'].'</option>';
          
        };
        //echo json_encode($resuleTow);
      }elseif($_POST['content2']){
        echo $_POST['content2'];
      }


      if($_POST['content1'] == 2){
         $resuleTow = M('services')->where('nid = 0')->select();
         foreach ($resuleTow as $k => $v) {
          echo '<option class="tow" value="'.$v['id'].'">'.$v['sername'].'</option>' ;
        }
      }
      





    }
    
*/






}>>>>>>> .r91
